<!DOCTYPE html>
<html>
<head>
	<meta charset="utf-8"/>
	<title>调用摄像头demo</title>
</head>
<body>
	<input type="button" title="开启摄像头" value="开启摄像头" onclick="getMedia();" /><br />  
    <video height="120px" autoplay="autoplay">您的浏览器不支持video标签</video><hr />  
    <input type="button" title="拍照" value="拍照" onclick="getPhoto();" /><br />  
    <canvas id="canvas" width="640px" height="480px" >您的浏览器不支持canvas标签</canvas><hr /> 
<script type="application/x-javascript">
	var video = document.querySelector('video');  
	var audio, audioType;  
  
	var canvas = document.getElementById('canvas');  
	var context = canvas.getContext('2d');  
	
	navigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.msGetUserMedia;  
	window.URL = window.URL || window.webkitURL || window.mozURL || window.msURL;  
	
	var exArray = []; //存储设备源ID  
		MediaStreamTrack.getSources(function (sourceInfos) {  
			for (var i = 0; i != sourceInfos.length; ++i) {  
				var sourceInfo = sourceInfos[i];  //这里会遍历audio,video，所以要加以区分  
				if (sourceInfo.kind === 'video') {  
					exArray.push(sourceInfo.id);  
				}  
			}  
		});  
  
	function getMedia() {  
			if (navigator.getUserMedia) {  
				navigator.getUserMedia({  
					video:{  
						'optional': [{  
							'sourceId': exArray[1] //0为前置摄像头，1为后置  
						}]  
					},  
				}, successFunc, errorFunc);    //success是获取成功的回调函数  
			}  
			else {  
				alert('Native device media streaming (getUserMedia) not supported in this browser.');  
			}  
		}  
  
	function successFunc(stream) {   
			if (video.mozSrcObject !== undefined) {  //检测Firefox的支持  
				video.mozSrcObject = stream;  
			}
			else {  
				video.src = (window.URL && window.URL.createObjectURL(stream)) || stream;  
			} 
			video.play();
		} 
		
	function errorFunc(e) {  
		alert('Error！'+e);  
	}
	
	 function getPhoto() {  
		context.drawImage(video, 0, 0,640,480); //将video对象内指定的区域捕捉绘制到画布上指定的区域，实现拍照。  
	} 
	</script>
</body>
</html>